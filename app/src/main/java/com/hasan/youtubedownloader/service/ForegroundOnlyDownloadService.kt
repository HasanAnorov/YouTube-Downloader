package com.hasan.youtubedownloader.service

import android.content.Intent
import androidx.lifecycle.Lifecycle
import androidx.lifecycle.LifecycleService
import androidx.lifecycle.flowWithLifecycle
import androidx.lifecycle.lifecycleScope
import com.hasan.youtubedownloader.data.YoutubeRepository
import kotlinx.coroutines.Job
import kotlinx.coroutines.flow.launchIn
import kotlinx.coroutines.flow.onEach
import javax.inject.Inject

class ForegroundOnlyDownloadService : LifecycleService() {

    @Inject
    lateinit var repository: YoutubeRepository

    // Get a reference to the Job from the Flow so we can stop it from UI events
    private var downloadFlow: Job? = null

    fun subscribeToDownloadUpdates() {

        // Binding to this service doesn't actually trigger onStartCommand(). That is needed to
        // ensure this Service can be promoted to a foreground service, i.e., the service needs to
        // be officially started (which we do here).
        startService(Intent(applicationContext, ForegroundOnlyDownloadService::class.java))

        // Observe locations via Flow as they are generated by the repository
//        downloadFlow = repository.getDownloadUpdates()
//            .flowWithLifecycle(
//                lifecycle, Lifecycle.State.STARTED
//            )
//            .onEach {
//
//            }
//            .launchIn(lifecycleScope)

    }

    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {

        val cancelDownloadTrackingFromNotification =
            intent?.getBooleanExtra(
                EXTRA_CANCEL_DOWNLOAD_TRACKING_FROM_NOTIFICATION,
                false
            )

        if (cancelDownloadTrackingFromNotification == true) {
            unsubscribeToDownloadUpdates()
            stopSelf()
        }

        return super.onStartCommand(intent, flags, START_NOT_STICKY)

    }

    private fun unsubscribeToDownloadUpdates() {
        downloadFlow?.cancel()
    }

    companion object {

        private const val TAG = "ForegroundOnlyLocationService"
        private const val PACKAGE_NAME = "com.hasan.youtubedownloader.service"
        private const val EXTRA_CANCEL_DOWNLOAD_TRACKING_FROM_NOTIFICATION =
            "$PACKAGE_NAME.extra.CANCEL_LOCATION_TRACKING_FROM_NOTIFICATION"

    }

}